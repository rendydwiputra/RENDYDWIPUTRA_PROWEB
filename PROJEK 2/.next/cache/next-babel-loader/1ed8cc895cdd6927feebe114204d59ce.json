{"ast":null,"code":"export default (async (req, res) => {\n  const {\n    email\n  } = req.body;\n\n  if (!email) {\n    return res.status(400).json({\n      error: 'Email is required'\n    });\n  }\n\n  try {\n    const API_KEY = process.env.BUTTONDOWN_API_KEY;\n    const response = await fetch(`https://api.buttondown.email/v1/subscribers`, {\n      body: JSON.stringify({\n        email,\n        tags: ['react2025']\n      }),\n      headers: {\n        Authorization: `Token ${API_KEY}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    });\n\n    if (response.status >= 400) {\n      return res.status(400).json({\n        error: await response.text()\n      });\n    }\n\n    return res.status(201).json({\n      error: ''\n    });\n  } catch (error) {\n    return res.status(500).json({\n      error: error.message || error.toString()\n    });\n  }\n});","map":{"version":3,"sources":["E:/PEMOGRAMAN WEB/web/myapp/pages/api/subscribe.js"],"names":["req","res","email","body","status","json","error","API_KEY","process","env","BUTTONDOWN_API_KEY","response","fetch","JSON","stringify","tags","headers","Authorization","method","text","message","toString"],"mappings":"AAAA,gBAAe,OAAOA,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAYF,GAAG,CAACG,IAAtB;;AAEA,MAAI,CAACD,KAAL,EAAY;AACV,WAAOD,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAArB,CAAP;AACD;;AAED,MAAI;AACF,UAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA5B;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,6CADyB,EAE1B;AACET,MAAAA,IAAI,EAAEU,IAAI,CAACC,SAAL,CAAe;AACnBZ,QAAAA,KADmB;AAEnBa,QAAAA,IAAI,EAAE,CAAC,WAAD;AAFa,OAAf,CADR;AAKEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,SAAQV,OAAQ,EADzB;AAEP,wBAAgB;AAFT,OALX;AASEW,MAAAA,MAAM,EAAE;AATV,KAF0B,CAA5B;;AAeA,QAAIP,QAAQ,CAACP,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,aAAOH,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BC,QAAAA,KAAK,EAAE,MAAMK,QAAQ,CAACQ,IAAT;AADa,OAArB,CAAP;AAGD;;AAED,WAAOlB,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAArB,CAAP;AACD,GAxBD,CAwBE,OAAOA,KAAP,EAAc;AACd,WAAOL,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAEA,KAAK,CAACc,OAAN,IAAiBd,KAAK,CAACe,QAAN;AAA1B,KAArB,CAAP;AACD;AACF,CAlCD","sourcesContent":["export default async (req, res) => {\n  const { email } = req.body;\n\n  if (!email) {\n    return res.status(400).json({ error: 'Email is required' });\n  }\n\n  try {\n    const API_KEY = process.env.BUTTONDOWN_API_KEY;\n    const response = await fetch(\n      `https://api.buttondown.email/v1/subscribers`,\n      {\n        body: JSON.stringify({\n          email,\n          tags: ['react2025']\n        }),\n        headers: {\n          Authorization: `Token ${API_KEY}`,\n          'Content-Type': 'application/json'\n        },\n        method: 'POST'\n      }\n    );\n\n    if (response.status >= 400) {\n      return res.status(400).json({\n        error: await response.text()\n      });\n    }\n\n    return res.status(201).json({ error: '' });\n  } catch (error) {\n    return res.status(500).json({ error: error.message || error.toString() });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}