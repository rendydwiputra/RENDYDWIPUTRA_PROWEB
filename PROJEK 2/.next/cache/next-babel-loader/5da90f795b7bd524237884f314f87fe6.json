{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rendi\\\\Downloads\\\\mastering-nextjs-master\\\\master\\\\components\\\\MDXComponents.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/** @jsx jsx */\nimport { Box, Heading, Link, Text, useColorMode } from '@chakra-ui/core';\nimport { jsx } from '@emotion/core';\nimport NextLink from 'next/link';\n\nconst CustomLink = props => {\n  const {\n    colorMode\n  } = useColorMode();\n  const color = {\n    light: 'hsl(208, 99%, 44%)',\n    dark: 'hsl(208, 95%, 68%)'\n  };\n  const href = props.href;\n  const isInternalLink = href && (href.startsWith('/') || href.startsWith('#'));\n\n  if (isInternalLink) {\n    return jsx(NextLink, {\n      href: href,\n      passHref: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, jsx(Link, _extends({\n      color: color[colorMode]\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    })));\n  }\n\n  return jsx(Link, _extends({\n    color: color[colorMode],\n    isExternal: true\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst MDXComponents = {\n  h1: props => jsx(Heading, _extends({\n    as: \"h1\",\n    size: \"xl\",\n    my: 4\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 18\n    }\n  })),\n  h2: props => jsx(Heading, _extends({\n    as: \"h2\",\n    fontWeight: \"bold\",\n    size: \"lg\",\n    mb: \"1em\",\n    mt: \"2em\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  })),\n  h3: props => jsx(Heading, _extends({\n    as: \"h3\",\n    size: \"md\",\n    fontWeight: \"bold\",\n    mb: \"1em\",\n    mt: \"2em\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  })),\n  br: props => jsx(Box, _extends({\n    height: \"24px\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 18\n    }\n  })),\n  a: CustomLink,\n  p: props => jsx(Text, _extends({\n    as: \"p\",\n    mt: 4,\n    lineHeight: \"tall\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  })),\n  ul: props => jsx(Box, _extends({\n    as: \"ul\",\n    pt: 2,\n    pl: 4,\n    ml: 2\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }\n  })),\n  li: props => jsx(Box, _extends({\n    as: \"li\",\n    pb: 1\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }\n  }))\n};\nexport default MDXComponents;","map":{"version":3,"sources":["C:/Users/Rendi/Downloads/mastering-nextjs-master/master/components/MDXComponents.js"],"names":["Box","Heading","Link","Text","useColorMode","jsx","NextLink","CustomLink","props","colorMode","color","light","dark","href","isInternalLink","startsWith","MDXComponents","h1","h2","h3","br","a","p","ul","li"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { Box, Heading, Link, Text, useColorMode } from '@chakra-ui/core';\nimport { jsx } from '@emotion/core';\nimport NextLink from 'next/link';\n\nconst CustomLink = (props) => {\n  const { colorMode } = useColorMode();\n  const color = {\n    light: 'hsl(208, 99%, 44%)',\n    dark: 'hsl(208, 95%, 68%)'\n  };\n\n  const href = props.href;\n  const isInternalLink = href && (href.startsWith('/') || href.startsWith('#'));\n\n  if (isInternalLink) {\n    return (\n      <NextLink href={href} passHref>\n        <Link color={color[colorMode]} {...props} />\n      </NextLink>\n    );\n  }\n\n  return <Link color={color[colorMode]} isExternal {...props} />;\n};\n\nconst MDXComponents = {\n  h1: (props) => <Heading as=\"h1\" size=\"xl\" my={4} {...props} />,\n  h2: (props) => (\n    <Heading as=\"h2\" fontWeight=\"bold\" size=\"lg\" mb=\"1em\" mt=\"2em\" {...props} />\n  ),\n  h3: (props) => (\n    <Heading as=\"h3\" size=\"md\" fontWeight=\"bold\" mb=\"1em\" mt=\"2em\" {...props} />\n  ),\n  br: (props) => <Box height=\"24px\" {...props} />,\n  a: CustomLink,\n  p: (props) => <Text as=\"p\" mt={4} lineHeight=\"tall\" {...props} />,\n  ul: (props) => <Box as=\"ul\" pt={2} pl={4} ml={2} {...props} />,\n  li: (props) => <Box as=\"li\" pb={1} {...props} />\n};\n\nexport default MDXComponents;\n"]},"metadata":{},"sourceType":"module"}